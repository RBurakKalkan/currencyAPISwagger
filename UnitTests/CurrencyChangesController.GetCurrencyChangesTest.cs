/*
* DO NOT MODIFY THIS COMMENT
* Generated by devmate
* Test model: 9ee79f5a-a180-4003-9eca-d95b6cf42c3c
*/

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace currencyAPI.ControllersTests
{
	[TestClass]
	public class GetCurrencyChangesTestCase
	{
#region Test methods
		[TestMethod]
		public async Task GetCurrencyChangesTest()
		{
			var tests = this.GetDataForExpectedReturnValueTests();
			foreach (var data in tests)
			{
				var parameters = data.Params;
				var actual = await data.ObjectUnderTest.GetCurrencyChanges(parameters.Currency);
				Assert.IsNotNull( actual);
			}
		}
#endregion

#region Test data
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		public IEnumerable<ExpectedValueTestData<IEnumerable<currencyAPI.Models.GetCurrencyChanges>>> GetDataForExpectedReturnValueTests()
		{
			var controller = new Controllers.CurrencyChangesController();
			yield return new ExpectedValueTestData<IEnumerable<currencyAPI.Models.GetCurrencyChanges>>
			{
				ObjectUnderTest = controller,
				Params = new Parameters
				{
					Currency = "USD"
				}
			};
		}
#endregion

#region Types
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		public struct ExpectedValueTestData<TExpected>
		{
			public currencyAPI.Controllers.CurrencyChangesController ObjectUnderTest;
			public Parameters Params;
		}

		public struct Parameters
		{
			public string Currency;
		}
#endregion
	}
}

/*
WARNING: Modification of this comment will make it impossible to merge user-defined changes

BEGIN_CODEGEN_DATA
H4sIAAAAAAAAAO1Vy24aMRRdg8Q/uGRDIhiSJmlLSVAjIC0LHgqTSFXVhfFcwK3xUNsTOqry7713HrySVF1UyqYIjcb
3ce7D52jqR6XiEesM2WDos/6w07v+zPxPvTFrD/v97sAn70fQYLiDgE1iFsD9At/J7oN1bBEGoN6zBsDbxvSc1/jJu+
Pa2fHxaa0BgteCxvnkjZievRanAnPqpWKpGFmpZ2wcWweL5u7Ra4dKgXAy1NZL6kqxH3ID0yxk3+PPDfAADZ7P7Xe7d
velMKENp867kzbiauyiQIYe9e+HobLerZaOThjcpA41X4BdcgFMRMaAFvHVqIe9aWeoP2Mp2JaKv0rFwhd6bytu7Vc8
LaOJkoIJOuPiXDvLb8+5nkGS1+YW11fA3AMDMxwjWyS4eRggaCGF7CdnwsxBuY21YDTaM8iVQ4qmpgqFe26Yoy7ZJXN
zSdt0He74dWi6P5e4PwhuwEVG33EVQTJP5bCZpE5DXKOYswphBJjDpE6xEvysQFJhyQ2uyuFGsAyFeiOy2OYmhAuHK0
c3X3Hp0qDh5Bt2cKsDMFTZezxOZYPs5a6svcKVtWCcd2Wg+wOhKwlkPlQyTjWrWk3LDRApS36gJz4OQAfp9um+dy6CU
krFev3ypX5UfKQAaULqktM4uUBmU9KzUKs4uZE5sD6pDwLpQsN06NgcDOQ+gb4qm6AKI0QK0WRWEt/wElZSKZbaF2Bm
FKunSDFnX73w5Guy97o6wt74RMHFzt3SHRGRL7YjtmWa7MQ+walWq8X+RgUbEcUSVMBMEsE0rNg/62RbSERP1MeH8vK
kXE1NewJBr46UypypxMiGHY3WOkmdGWYhr4hh5dtxp5yaHzKInTky9FQfzT8LJF6C/S+OF5p8LQ7rTCTcM2z0c3NrQ+
RNHn0PiXDNbfszXzlvj7YbF9sj6A7ahpJs+2uQedft7baf8+7xlLsMf2qevM2nuEtn/P8G5lbPf+gIAAA=
END_CODEGEN_DATA
*/
