/*
* DO NOT MODIFY THIS COMMENT
* Generated by devmate
* Test model: e0d6be26-706d-4565-8e18-c41e1f1d34b0
*/

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace currencyAPI.ControllersTests
{
	[TestClass]
	public class GetFromXMLTestCase
	{
#region Test methods
		[TestMethod]
		public async Task GetFromXMLTest()
		{
			var tests = this.GetDataForExpectedReturnValueTests();
			foreach (var data in tests)
			{
				var actual = await data.ObjectUnderTest.GetFromXML();
				Assert.IsNotNull(actual);
			}
		}
#endregion

#region Test data
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		public IEnumerable<ExpectedValueTestData<IEnumerable<currencyAPI.Models.Currency>>> GetDataForExpectedReturnValueTests()
		{
			var controller = new currencyAPI.Controllers.CurrencyController();
			yield return new ExpectedValueTestData<IEnumerable<currencyAPI.Models.Currency>>
			{
				ObjectUnderTest = controller
			};
		}
#endregion


#region Types
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		public struct ExpectedValueTestData<TExpected>
		{
			public currencyAPI.Controllers.CurrencyController ObjectUnderTest;
		}
#endregion
	}
}

/*
WARNING: Modification of this comment will make it impossible to merge user-defined changes

BEGIN_CODEGEN_DATA
H4sIAAAAAAAAAO1VTW8aMRA9g8R/cNMLiWAJbUKjkqCihLRIBaJkE7WqejDrIbj12tT2hqyq/vfOmG+URK16yKUIrdb
z8eZ5/MZb2ysV99jZgPUHMesNzrrnn1n8oXvFTge9Xqcfk/c9aLDcg2DDnAm4S/Gd7DE4z1IjQL1lsC8aQ3jVqL7Zb4
jqwWHjsHoE9aNqclCH+qguXh8M9zGnViqWipmT+pZd5c5D2txcRqdGKUi8NNpFoa5MtkMuYTQP2fbEYwtcoCGKufvul
u6eTKxxZuSjG+kyrq58JqSJiH9sjHLRtZaeVhjcJIaap+AmPAGWZNaCTvL2RRe5aW+Jn3UU7ErFn6Vi4Qu9nyru3Fdc
TbKhkglLaI2N8+fWpJ96H0MMd9i2Aua8tHCL9OcNBD82AsEKM6heWBPWAoy7XCeMtrSFWN6lKCJRKNxxyzyxYifMjyV
1z59xz8+N7dxPsF8gLsFnVt9wlUHgX95thtSRwbYlY1YmDIE5TOoZVsCfFwgVeOKxf1iCT7n0ITgaDL8h/LUWYAk2Wn
FcFCi0nQPro7aFzg/ML4e8Ba1AqDKHrsww+3gA8+Rf9MTHS9Bi1jc6oY0WUkqpWKudPNePil8owAOmeZCjPBwBczOZM
qNVHno6BtajeQEhvbFMG8/GYGHhS9BXYUNIeIZIBk12KvENOz2VSrGZPQV7S7F6hOLw7sUz73wp025HZ8iNDxUcb5wt
nRFJ8Xg9Yn2wQk9cdDo3tVot9ifqXYk/l6AEsyGCaZiyf6y/LnuSIgr+3c6kvlOZmbYUj962KFPZJ0DLu7vz7A1umKs
zpWZKbz4p9XOcEGMlhKtiYuUdXsPMee7pvnn4mlpWX9mI6hM0UV3pEGx9rbm1GosH+IWQ6URBCtqzUWCSB68fWzMNPe
8b312EgOjcJzAh9c8vgccnOJ/Qlv5P77PsfDm9ztss8Y8MTrwwt1ayWOXRJ5ampLlu/wtFbo3TBsyy8iazhyRFa/z/B
qCsE+fSCAAA
END_CODEGEN_DATA
*/
