/*
* DO NOT MODIFY THIS COMMENT
* Generated by devmate
* Test model: e0d6be26-706d-4565-8e18-c41e1f1d34b0
*/

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace currencyAPI.ControllersTests
{
	[TestClass]
	public class GetFromXMLTestCase
	{
#region Test methods
		[TestMethod]
		public async Task GetFromXMLTest()
		{
			var tests = this.GetDataForExpectedReturnValueTests();
			foreach (var data in tests)
			{
				var actual = await data.ObjectUnderTest.GetFromXML();
				Assert.AreEqual(data.ExpectedValue, actual, data.Name);
			}
		}
#endregion

#region Test data
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		public IEnumerable<ExpectedValueTestData<IEnumerable<currencyAPI.Models.Currency>>> GetDataForExpectedReturnValueTests()
		{
			yield return new ExpectedValueTestData<IEnumerable<currencyAPI.Models.Currency>>
			{
				Name = @"p1",
				ObjectUnderTest = null,
				ExpectedValue = null
			};
		}
#endregion

#region Types
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		public struct ExpectedValueTestData<TExpected>
		{
			public string Name;
			public currencyAPI.Controllers.CurrencyController ObjectUnderTest;
			public TExpected ExpectedValue;
		}
#endregion
	}
}

/*
WARNING: Modification of this comment will make it impossible to merge user-defined changes

BEGIN_CODEGEN_DATA
H4sIAAAAAAAAAO1VTW8aMRA9g8R/mCYXEsES2oRGJUGNCGmRSoiSTdSq6sHYQ3BrbGJ7Q1dV/3vHu8unmqpSD7kUoZX
n683bmWdtY79S3ofzIVwOYxgMz/sXnyB+37+B7nAw6F3GIfoONVrmUcAoBYGPUzoHf4zOw9QIVG8AD0RrhC9b9dcHLV
E/PGod1Y+xeVznh01sjpvi1eHogGoalXKlnDip7+EmdR6n7U0z6hqlkHtptIuyvpJvp1zjuEjZjsQTi0yQI4qZ++aW4
YHk1jgz9tGddAlTNz4R0kSBf2yMctGtlj5YlNwODDWbopsxjsATa1Hz9OyqT9y0t4GfdSHZVco/KuXS53DuKubcF7Jm
yUhJDjzYNDh/Yc304+BDlsMcja1ENbsW74l+MUD0EyMIrJRDDTI7YC3AmEs1h/BKW4jVvZAVSJRKj8yCD6zgFPxEhun
5c+bZhbG97zOaF4pr9InVd0wlmPGv7rWz0rGhsfEJVAOGoBqQOsfK8IsGWQfGPc2PWrA5kz5LjoajrwR/qwXaAButOC
4alM6cQ+ujM4u9B6qvZnULWhmhWgFdyzEvaQFF8c/wpMcuapHPLWxoY4ShpFJuNE6f6xeaXymkBYf7IMdptgJwuUzBa
JVmM50gDMJ9QSG9saCNhwlaXMQ4xWowQs4SQjLksnNJJ5r0XCoFuX+K9j7k6jGJw7sXz/zmS5n2ezohbmyk8GRjt2FH
QYon6xnrFyubiYu6havT6cDfqHcl/lSiEmCzDNA4h3/svy77IEUS/NudWXOnlru2FE9RnShVBDdaF6FcyO0/Kzmdofu
v4md686WKnbcJ908IKF64OyvtrerCpyaopb3uf+IDshTbygdbstqAWXbeZPY7SQWb/r8A+A3nzdoHAAA=
END_CODEGEN_DATA
*/
